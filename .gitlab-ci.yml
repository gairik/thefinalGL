default:
    image: node
    
workflow:
  rules: 
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
    - if: '$CI_PIPELINE_SOURCE == "web"'
stages: 
    - build
    - test
    - deploy
variables:
    DOWNSTREAM_PROJECT_ID: 10048
    
build:
    stage: build
    image: alpine
    before_script:
    - apk add curl jq
    script:
    - |
    
        echo CI_EXTERNAL_PULL_REQUEST_IID: $CI_EXTERNAL_PULL_REQUEST_IID
        echo CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY	: $CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY	
        echo CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY : $CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY
        echo CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
        echo CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME
        echo $CI_SERVER_URL
    # Check if feature branch exists in downstream project. Otherwise use master.
    - |
        export TRIGGER_BRANCH=${CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME}
        #Creating a new branch
        curl --request POST --header "PRIVATE-TOKEN: $SVC_HLS_RENDER_API" "${CI_SERVER_URL}/api/v4/projects/$DOWNSTREAM_PROJECT_ID/repository/branches?branch=$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME&ref=master"
staging:
  stage: deploy
  trigger:
    project: aluni/target
    branch: $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME        
