stages:
    - build
    - trigger_downstream
default:
    image: node

workflow:
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
    - if: '$CI_PIPELINE_SOURCE == "web"'

variables:
    DOWNSTREAM_PROJECT_ID: 10048

build:
    stage: build
    image: alpine
    before_script:
    - apk add curl jq
    script:
    - |

        echo CI_EXTERNAL_PULL_REQUEST_IID: $CI_EXTERNAL_PULL_REQUEST_IID
        echo CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY	: $CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY
        echo CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY : $CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY
        echo CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
        echo CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME
    # Check if feature branch exists in downstream project. Otherwise use master.
    - | 
        set -e
        export TRIGGER_BRANCH=${CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME}
        #Creating a new branch
        curl --request POST --header \
        "PRIVATE-TOKEN: $SVC_HLS_RENDER_API" \
        "$CI_SERVER_URL/api/v4/projects/$DOWNSTREAM_PROJECT_ID/repository/branches?branch=$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME&ref=master" || echo "blabla"

        #Creating a new MR
        curl --request POST --header \
        "PRIVATE-TOKEN: $SVC_HLS_RENDER_API" \
        "$CI_SERVER_URL/api/v4/projects/$DOWNSTREAM_PROJECT_ID/merge_requests?source_branch=$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME&target_branch=master&title=PullReqFrom_$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME"

        echo $TRIGGER_BRANCH
        ./generate-config.sh
        echo "testing stat us"
    artifacts:
     paths:
      - generated-config.yml

bridge_for_bridge:
  stage: trigger_downstream
  trigger:
    include:
      - artifact: generated-config.yml
        job: build
    strategy: depend
